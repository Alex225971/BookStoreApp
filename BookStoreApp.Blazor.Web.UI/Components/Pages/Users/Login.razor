@page "/users/login"
@inject IAuthService authService
@rendermode InteractiveServer
@inject NavigationManager navManager
<div class="card">
    <div class="card-title">
        <h3>Login</h3>
    </div>

    <div class="card-body">
        <EditForm FormName="RegisterUser" Model="LoginModel" OnValidSubmit="HandleLoginAsync">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label>Email Address</label>
                <InputText class="form-control mb-2" @bind-Value="LoginModel.Email" />
                <ValidationMessage For="@(() => LoginModel.Email)" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText class="form-control mb-2" type="password" @bind-Value="LoginModel.Password" />
                <ValidationMessage For="@(() => LoginModel.Password)" />
            </div>
            <button type="submit" class="btn btn-primary btn-block mt-2">Log In</button>
        </EditForm>
    </div>
</div>


@code {
    LoginUserDto LoginModel = new LoginUserDto();
    string message = string.Empty;

    public async Task HandleLoginAsync()
    {

        var response = await authService.AuthenticateAsync(LoginModel);
        if (response.Success)
        {
            navManager.NavigateTo("/");
        } 
        else
        {
            message = response.Message;
        }
    }

    private void NavigateToLogin()
    {
        navManager.NavigateTo("/users/login");
    }
}
